{{> head title="College Details" }}
{{> sidebar }}

<main class="main-content min-h-screen p-8 animate-page" style="background: linear-gradient(135deg, #e6f0ea 0%, var(--bg-light) 100%);">
  <div class="max-w-7xl mx-auto">

    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between mb-6">
        <div>
          <nav class="text-sm text-gray-500">
            <!-- <a href="/colleges" class="hover:text-[--accent]">Home / Colleges</a> / {{college.name}} -->
          </nav>
          <h2 class="text-3xl font-bold text-[--primary] mt-1">{{college.name}}</h2>
          <p class="text-sm text-gray-600 mt-2">{{college.description}}</p>
        </div>
        <a href="/colleges" class="px-4 py-2 bg-[--accent] hover:bg-emerald-700 text-white rounded-lg font-medium transition-colors">
          ← Back
        </a>
      </div>
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Left Column (College Info & Stats) -->
      <div class="lg:col-span-2 space-y-6">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- College Information -->
          <div class="p-6 bg-white rounded-xl border border-[--border] hover:border-[--accent] transition-all duration-300 hover:shadow-md">
            <h4 class="text-base font-semibold text-[--primary] mb-4">College Information</h4>
            <div class="space-y-4 text-sm">
              <div>
                <div class="text-xs font-medium text-gray-500 uppercase tracking-wide mb-1">Dean</div>
                <div class="font-medium text-[--primary]">{{college.dean}}</div>
              </div>
              <div>
                <div class="text-xs font-medium text-gray-500 uppercase tracking-wide mb-1">Established</div>
                <div class="font-medium text-[--primary]">{{college.established}}</div>
              </div>
              <div>
                <div class="text-xs font-medium text-gray-500 uppercase tracking-wide mb-1">Email</div>
                <div class="font-medium text-[--primary]">{{college.email}}</div>
              </div>
              <div>
                <div class="text-xs font-medium text-gray-500 uppercase tracking-wide mb-1">Phone</div>
                <div class="font-medium text-[--primary]">{{college.phone}}</div>
              </div>
            </div>
          </div>

          <!-- Quick Stats -->
          <div class="p-6 bg-white rounded-xl border border-[--border] hover:border-[--accent] transition-all duration-300 hover:shadow-md">
            <h4 class="text-base font-semibold text-[--primary] mb-4">Quick Stats</h4>
            <div class="grid grid-cols-2 gap-4">
              <div class="p-4 rounded-lg border border-[--border] bg-emerald-50/40">
                <div class="text-xs uppercase text-gray-500 font-medium">Buildings</div>
                <div class="text-2xl font-semibold text-[--primary]">{{stats.totalBuildings}}</div>
              </div>
              <div class="p-4 rounded-lg border border-[--border] bg-emerald-50/40">
                <div class="text-xs uppercase text-gray-500 font-medium">Total Rooms</div>
                <div class="text-2xl font-semibold text-[--primary]">{{stats.totalRooms}}</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Column (Dean Contact) -->
      <div class="lg:col-span-1">
        <div class="p-6 bg-white rounded-xl border border-[--border] hover:border-[--accent] transition-all duration-300 hover:shadow-md">
          <h4 class="text-base font-semibold text-[--primary] mb-4">Dean Contact</h4>
          <p class="text-sm text-gray-700 mb-2"><strong>Email:</strong> {{college.email}}</p>
          <p class="text-sm text-gray-700"><strong>Phone:</strong> {{college.phone}}</p>
        </div>
      </div>
    </div>

    <!-- Buildings Section -->
    <div class="mt-10">
      <div class="flex items-center justify-between mb-6">
        <div>
          <h3 class="text-2xl font-semibold text-[--primary]">Buildings</h3>
          <p class="text-sm text-gray-600">All buildings under this college</p>
        </div>
        <button id="openAddBuildingModal" class="px-4 py-2 bg-[--accent] hover:bg-emerald-700 text-white rounded-lg font-medium transition-colors">
          Add Building
        </button>
      </div>

      <!-- Add Building Modal moved below to overlay the sidebar like other pages -->

      {{#if buildings.length}}
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="buildingsList">
          {{#each buildings}}
          <div class="bg-white rounded-xl border border-[--border] hover:border-[--accent] transition-all duration-300 hover:shadow-md p-4 animate-card-rtl card-hover-lift" style="--i: {{@index}}">
            <div class="flex items-center gap-4">
              <div class="w-10 h-10 rounded-lg bg-emerald-50 flex items-center justify-center">
                <svg class="w-5 h-5 text-emerald-600" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                  <path d="M3 9.5l9-7 9 7V20a1 1 0 01-1 1H4a1 1 0 01-1-1V9.5z"/>
                </svg>
              </div>
              <div class="flex-1">
                <div class="text-sm font-semibold text-[--primary]">{{name}}</div>
                <div class="text-xs text-gray-600">{{floors}} floors • {{totalrooms}} rooms</div>
                <div class="text-xs text-gray-500">{{location}}</div>
              </div>
            </div>
            <div class="mt-4">
              <a href="/buildings/view/{{id}}" class="px-4 py-2 bg-[--accent] hover:bg-emerald-700 text-white rounded-lg text-sm font-medium transition-colors w-full text-center block">
                View
              </a>
            </div>
          </div>
          {{/each}}
        </div>
      {{else}}
        <div class="col-span-full text-center py-12 text-gray-500 bg-white rounded-xl border border-[--border]">
          <svg class="w-10 h-10 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path d="M12 20h9" />
            <path d="M12 4h9" />
            <path d="M4 9h16M4 15h16" />
          </svg>
          <p class="text-sm">No buildings found for this college.</p>
        </div>
      {{/if}}
    </div>
  </div>
</main>

  <!-- Add Building Modal -->
  <div id="addBuildingModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden backdrop-blur-sm">
    <div class="bg-white rounded-lg p-8 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
      <h2 class="text-xl font-semibold text-[--primary] mb-6">Add New Building</h2>
      <form id="addBuildingForm">
        <input type="hidden" name="college_id" value="{{college.id}}">
        
        <!-- Reorganized form into a 2-column grid for better space usage -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1" for="name">Building Name *</label>
            <input type="text" name="name" id="name" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent" required>
            <p class="text-red-500 text-xs mt-1 hidden" id="name-error">Building name is required</p>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1" for="status">Status *</label>
            <select name="status" id="status" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent" required>
              <option value="">Select status</option>
              <option value="Operational">Operational</option>
              <option value="Under Renovation">Under Renovation</option>
              <option value="Closed">Closed</option>
            </select>
            <p class="text-red-500 text-xs mt-1 hidden" id="status-error">Status is required</p>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1" for="floors">Floors *</label>
            <input type="number" name="floors" id="floors" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent" required min="1">
            <p class="text-red-500 text-xs mt-1 hidden" id="floors-error">Floors must be a positive number</p>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1" for="totalrooms">Total Rooms *</label>
            <input type="number" name="totalrooms" id="totalrooms" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent" required min="0">
            <p class="text-red-500 text-xs mt-1 hidden" id="totalrooms-error">Total rooms must be non-negative</p>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1" for="built_year">Built Year *</label>
            <input type="number" name="built_year" id="built_year" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent" required min="1800" max="2100">
            <p class="text-red-500 text-xs mt-1 hidden" id="built_year-error">Built year must be between 1800 and 2100</p>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1" for="location">Address *</label>
            <input type="text" name="location" id="location" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent" required>
            <p class="text-red-500 text-xs mt-1 hidden" id="location-error">Address is required</p>
          </div>
        </div>

        <div class="mt-4">
          <label class="block text-sm font-medium text-gray-700 mb-1" for="description">Description</label>
          <textarea name="description" id="description" rows="3" class="p-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-[--accent] focus:border-transparent"></textarea>
        </div>

        <div class="flex justify-end gap-3 mt-6">
          <button type="button" id="cancelBuildingBtn" class="px-5 py-2 bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-lg font-medium transition-colors">Cancel</button>
          <button type="submit" class="px-5 py-2 bg-[--accent] hover:bg-emerald-700 text-white rounded-lg font-medium transition-colors">Save Building</button>
        </div>
      </form>
    </div>
  </div>

{{> footer}}

<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
/* =========================== */
/* BUILDING MODAL KEYBOARD SHORTCUTS */
/* =========================== */
document.addEventListener('keydown', (event) => {
  const modal = document.getElementById('addBuildingModal');
  const form = document.getElementById('addBuildingForm');
  const isModalOpen = !modal.classList.contains('hidden');

  // === Ctrl + Enter → Open modal & focus Building Name ===
  if (event.ctrlKey && event.key === 'Enter') {
    event.preventDefault();
    openAddBuildingModal();
  }

  // === Enter → Move to next input field or submit ===
  if (event.key === 'Enter' && !event.ctrlKey && isModalOpen) {
    const active = document.activeElement;
    const inputs = Array.from(form.querySelectorAll('input, select, textarea, button'));
    const index = inputs.indexOf(active);

    if (active && active.tagName === 'SELECT') {
      const hasValue = active.value && active.value.trim() !== '';
      if (!hasValue) {
        return; // Let Enter open the dropdown
      } else {
        event.preventDefault(); // Move to next input
      }
    } else {
      event.preventDefault();
    }

    if (index > -1 && index < inputs.length - 1) {
      inputs[index + 1].focus();
    } else if (index === inputs.length - 1) {
      form.requestSubmit();
    }
  }

  // === Ctrl + D → Clear all fields ===
  if (event.ctrlKey && event.key.toLowerCase() === 'd' && isModalOpen) {
    event.preventDefault();
    form.reset();
    document.getElementById('name')?.focus();
    Swal.fire({
      toast: true,
      position: 'bottom-end',
      icon: 'info',
      title: 'All fields cleared.',
      showConfirmButton: false,
      timer: 1000
    });
  }

  // === Esc → Clear only current textbox ===
  if (!event.ctrlKey && event.key === 'Escape' && isModalOpen) {
    const active = document.activeElement;
    if (active && (active.tagName === 'INPUT' || active.tagName === 'TEXTAREA')) {
      event.preventDefault();
      active.value = '';
      Swal.fire({
        toast: true,
        position: 'bottom-end',
        icon: 'info',
        title: 'Textbox cleared.',
        showConfirmButton: false,
        timer: 800
      });
    }
  }

  // === Ctrl + B → Close modal ===
  if (event.ctrlKey && event.key.toLowerCase() === 'b' && isModalOpen) {
    event.preventDefault();
    closeAddBuildingModal();
    Swal.fire({
      toast: true,
      position: 'bottom-end',
      icon: 'warning',
      title: 'Modal closed.',
      showConfirmButton: false,
      timer: 1000
    });
  }
});

/* =========================== */
/* MODAL OPEN/CLOSE FUNCTIONS */
/* =========================== */
function openAddBuildingModal() {
  const modal = document.getElementById('addBuildingModal');
  modal.classList.remove('hidden');
  document.body.style.overflow = 'hidden';
  document.querySelectorAll('.text-red-500').forEach(el => el.classList.add('hidden'));
  setTimeout(() => {
    document.getElementById('name')?.focus();
  }, 100);
}

function closeAddBuildingModal() {
  const modal = document.getElementById('addBuildingModal');
  const form = document.getElementById('addBuildingForm');
  modal.classList.add('hidden');
  document.body.style.overflow = 'auto';
  form.reset();
  document.querySelectorAll('.text-red-500').forEach(el => el.classList.add('hidden'));
}

// Backdrop click to close
document.getElementById('addBuildingModal')?.addEventListener('click', (e) => {
  if (e.target === document.getElementById('addBuildingModal')) {
    closeAddBuildingModal();
  }
});

/* =========================== */
/* BUTTON EVENT HANDLERS */
/* =========================== */
document.getElementById('openAddBuildingModal').addEventListener('click', openAddBuildingModal);
document.getElementById('cancelBuildingBtn').addEventListener('click', closeAddBuildingModal);

/* =========================== */
/* FORM SUBMISSION HANDLER */
/* =========================== */
document.getElementById('addBuildingForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  const data = Object.fromEntries(formData);

  let hasError = false;
  if (!data.name) {
    document.getElementById('name-error').classList.remove('hidden');
    hasError = true;
  } else {
    document.getElementById('name-error').classList.add('hidden');
  }
  if (!data.floors || data.floors <= 0) {
    document.getElementById('floors-error').classList.remove('hidden');
    hasError = true;
  } else {
    document.getElementById('floors-error').classList.add('hidden');
  }
  if (!data.totalrooms || data.totalrooms < 0) {
    document.getElementById('totalrooms-error').classList.remove('hidden');
    hasError = true;
  } else {
    document.getElementById('totalrooms-error').classList.add('hidden');
  }
  if (!data.built_year || data.built_year < 1800 || data.built_year > 2100) {
    document.getElementById('built_year-error').classList.remove('hidden');
    hasError = true;
  } else {
    document.getElementById('built_year-error').classList.add('hidden');
  }
  if (!data.status || data.status === '') {
    document.getElementById('status-error').classList.remove('hidden');
    hasError = true;
  } else {
    document.getElementById('status-error').classList.add('hidden');
  }
  if (!data.location) {
    document.getElementById('location-error').classList.remove('hidden');
    hasError = true;
  } else {
    document.getElementById('location-error').classList.add('hidden');
  }

  if (hasError) {
    Swal.fire({
      icon: 'error',
      title: 'Validation Error',
      text: 'Please fill in all required fields correctly.'
    });
    return;
  }

  try {
    const response = await fetch('/buildings/add', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    });

    const result = await response.json();
    if (response.ok) {
      await Swal.fire({
        icon: 'success',
        title: 'Building Added',
        text: result.message || 'Building added successfully!',
        timer: 2000,
        showConfirmButton: false
      });
      closeAddBuildingModal();
      updateBuildingsList(result.buildings);
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.message || 'Failed to add building'
      });
    }
  } catch (error) {
    console.error('Error adding building:', error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An error occurred while adding the building.'
    });
  }
});

/* =========================== */
/* UPDATE BUILDINGS LIST FUNCTION */
/* =========================== */
function updateBuildingsList(buildings) {
  const buildingsContainer = document.getElementById('buildingsList');

  if (buildings && buildings.length) {
    buildingsContainer.innerHTML = buildings.map(building => `
      <div class="bg-white rounded-xl border border-[--border] hover:border-[--accent] transition-all duration-300 hover:shadow-md p-4">
        <div class="flex items-center gap-4">
          <div class="w-10 h-10 rounded-lg bg-emerald-50 flex items-center justify-center">
            <svg class="w-5 h-5 text-emerald-600" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path d="M3 9.5l9-7 9 7V20a1 1 0 01-1 1H4a1 1 0 01-1-1V9.5z"/>
            </svg>
          </div>
          <div class="flex-1">
            <div class="text-sm font-semibold text-[--primary]">${building.name}</div>
            <div class="text-xs text-gray-600">${building.floors} floors • ${building.totalrooms} rooms</div>
            <div class="text-xs text-gray-500">${building.location}</div>
          </div>
        </div>
        <div class="mt-4">
          <a href="/buildings/view/${building.id}" class="px-4 py-2 bg-[--accent] hover:bg-emerald-700 text-white rounded-lg text-sm font-medium transition-colors w-full text-center block">
            View
          </a>
        </div>
      </div>
    `).join('');
  } else {
    buildingsContainer.innerHTML = `
      <div class="col-span-full text-center py-12 text-gray-500 bg-white rounded-xl border border-[--border]">
        <svg class="w-10 h-10 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
          <path d="M12 20h9" />
          <path d="M12 4h9" />
          <path d="M4 9h16M4 15h16" />
        </svg>
        <p class="text-sm">No buildings found for this college.</p>
      </div>
    `;
  }
}

/* =========================== */
/* GLOBAL NAVIGATION SHORTCUTS */
/* =========================== */
document.addEventListener('keydown', (event) => {
  if (event.ctrlKey && event.altKey) {
    switch (event.key.toLowerCase()) {
      case 'c': window.location.href = '/colleges'; break;
      case 'b': window.location.href = '/buildings'; break;
      case 'r': window.location.href = '/rooms'; break;
      case 's': window.location.href = '/schedules'; break;
      case 'd': window.location.href = '/dashboard'; break;
      case 'l': window.location.href = '/logout'; break;
      case 'a': window.location.href = '/settings'; break;
      default: return;
    }
    event.preventDefault();
  }
});
</script>
