{{> head title="Login" }}
<script>
  // Fallback: if server signals the user is authenticated, redirect to dashboard.
  // The server-side controller now redirects if session exists, but some
  // browsers may show cached pages; this protects against that.
  (function(){
    try {
      var isAuth = "{{isAuthenticated}}" === "true";
      if (isAuth) {
        window.location.replace('/dashboard');
      }
      // Also handle browsers that restore pages from bfcache (Back/Forward cache).
      // The pageshow event fires when a page is restored from bfcache; fetch /session
      // to ensure the current session state and redirect if authenticated.
      window.addEventListener('pageshow', async (ev) => {
        try {
          const r = await fetch('/session', { credentials: 'same-origin' });
          if (r.ok) {
            const j = await r.json();
            if (j.authenticated) window.location.replace('/dashboard');
          }
        } catch (e) {
          // ignore
        }
      });
    } catch(e) {
      // Ignore template evaluation issues
    }
  })();
</script>
<main class="min-h-screen bg-gray-50 flex items-center justify-center p-4">
  <div class="max-w-md w-full">
    
        <div class="bg-white rounded-lg border border-slate-200 p-8 hover:shadow-lg transition-all duration-300">

  <!-- Back Button -->
  <div class="mb-4">
    <a href="/" class="flex items-center text-slate-600 hover:text-emerald-600 transition-colors">
      <svg xmlns="http://www.w3.org/2000/svg"
           class="w-5 h-5 mr-1"
           fill="none"
           viewBox="0 0 24 24"
           stroke="currentColor"
           stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
      </svg>
      Back
    </a>
  </div>
      <!-- Logo/Title -->
      <div class="text-center mb-8">
        <div class="w-16 h-16 bg-emerald-100 rounded-lg flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-emerald-600" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
          </svg>
        </div>
        <h2 class="text-2xl font-semibold text-slate-900">Welcome Back</h2>
        <p class="text-sm text-slate-600 mt-1">Sign in to your account to continue</p>
      </div>

      {{#if error}}
      <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-6 animate-pulse">
        <p>{{error}}</p>
      </div>
      {{/if}}

      {{#if lockout}}
      <div class="bg-yellow-50 border border-yellow-200 text-yellow-700 px-4 py-3 rounded-lg mb-6 animate-pulse">
        <p>Too many failed attempts. Please wait <span id="countdown">{{remainingTime}}</span> seconds.</p>
      </div>
      {{/if}}

      <!-- Login Form -->
  <form action="/login" method="POST" class="space-y-6" id="loginForm" {{#if lockout}}style="display: none;"{{/if}}>
        <div>
          <label for="email" class="block text-sm font-medium text-slate-700 mb-2">Email Address</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required 
            class="w-full px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all duration-200 hover:border-slate-400"
            placeholder="Enter your email"
          />
        </div>

        <div class="relative">
  <label for="password" class="block text-sm font-medium text-slate-700 mb-2">Password</label>
  <div class="relative">
    <input 
      type="password" 
      id="password" 
      name="password" 
      required 
      class="w-full px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all duration-200 hover:border-slate-400 pr-10"
      placeholder="Enter your password"
    />

    <!-- Eye Icon Button -->
    <button 
      type="button" 
      id="togglePassword" 
      class="absolute inset-y-0 right-3 flex items-center text-slate-500 hover:text-emerald-600 focus:outline-none"
      tabindex="-1"
    >
      <!-- Eye Open Icon -->
      <svg id="eyeOpen" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
          d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
          d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
      </svg>

      <!-- Eye Closed Icon (hidden by default) -->
      <svg id="eyeClosed" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
          d="M3 3l18 18M10.477 10.477A3 3 0 0113.5 13.5m4.545 4.545A9.956 9.956 0 0112 19c-4.477 0-8.268-2.943-9.542-7a9.956 9.956 0 012.979-4.568M9.88 9.88A3 3 0 0112 9c.795 0 1.558.312 2.121.879" />
      </svg>
    </button>
  </div>
</div>


        <div class="flex items-center justify-between">
          <label class="flex items-center">
            <input type="checkbox" class="w-4 h-4 text-emerald-600 border-slate-300 rounded focus:ring-emerald-500">
            <span class="ml-2 text-sm text-slate-600">Remember me</span>
          </label>
          <a href="#" class="text-sm text-emerald-600 hover:text-emerald-700 transition-colors">Forgot password?</a>
        </div>

        <button 
          type="submit" 
          class="w-full bg-emerald-600 text-white py-3 px-4 rounded-lg hover:bg-emerald-700 focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 transition-all duration-200 transform hover:-translate-y-0.5 hover:shadow-md font-medium"
        >
          Sign In
        </button>
      </form>

      <script>
        // Submit the login form via fetch so we can use location.replace on success
        document.addEventListener('DOMContentLoaded', () => {
          const form = document.getElementById('loginForm');
          if (!form) return;

          form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(form);
            const body = new URLSearchParams();
            for (const pair of formData.entries()) {
              body.append(pair[0], pair[1]);
            }

            try {
              const res = await fetch(form.action, {
                method: 'POST',
                headers: {
                  'X-Requested-With': 'XMLHttpRequest',
                  'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: body.toString(),
                credentials: 'same-origin'
              });

              if (res.ok) {
                // Successful login â€” replace history entry to prevent back navigation to login
                window.location.replace('/dashboard');
                return;
              }

              const data = await res.json().catch(()=>({}));
              // On failure, reload the page to show server-set flash messages (or show inline)
              window.location.reload();

            } catch (err) {
              console.error('Login request failed', err);
              window.location.reload();
            }
          });
        });
      </script>

      <!-- Sign up link -->
      <!-- <p class="mt-6 text-center text-sm text-slate-600">
        Don't have an account? 
        <a href="/register" class="text-emerald-600 hover:text-emerald-700 font-medium transition-colors">Sign up</a>
      </p> -->
    </div>
  </div>
</main>

<style>
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
  }
  .animate-pulse {
    animation: pulse 1.5s infinite;
  }
</style>

<script>
  // Countdown timer for lockout
  document.addEventListener('DOMContentLoaded', () => {
    const countdownElement = document.getElementById('countdown');
    const loginForm = document.getElementById('loginForm');
    if (countdownElement) {
      let remainingTime = parseInt(countdownElement.textContent);
      const interval = setInterval(() => {
        remainingTime--;
        countdownElement.textContent = remainingTime;
        if (remainingTime <= 0) {
          clearInterval(interval);
          countdownElement.parentElement.parentElement.style.display = 'none';
          loginForm.style.display = 'block';
        }
      }, 1000);
    }
  });
</script>
<style>
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
  }
  .animate-pulse {
    animation: pulse 1.5s infinite;
  }
</style>

<script>
  // Password visibility toggle
  document.addEventListener('DOMContentLoaded', () => {
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    const eyeOpen = document.getElementById('eyeOpen');
    const eyeClosed = document.getElementById('eyeClosed');

    togglePassword.addEventListener('click', () => {
      const isPassword = passwordInput.type === 'password';
      passwordInput.type = isPassword ? 'text' : 'password';
      eyeOpen.classList.toggle('hidden', !isPassword);
      eyeClosed.classList.toggle('hidden', isPassword);
    });
  });
</script>
